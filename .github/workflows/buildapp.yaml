name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Cache Dirs
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Update Ruffle
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn run update-ruffle

      - name: Run Build
        shell: bash
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          PLATFORM: ${{ matrix.platform }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
              if [ "$GITHUB_REF" == "refs/heads/main" ] || [ -f ./force_release ]; then
                export YARN_BUILD_CMD="release"
              else
                export YARN_BUILD_CMD="dist"
              fi

              if [ "$RUNNER_OS" == "Windows" ]; then
                export FLAGS="--win --x64 --ia32"
              else
                export FLAGS=""
              fi

              yarn --link-duplicates --pure-lockfile --ignore-engines install
              yarn run build
              yarn run $YARN_BUILD_CMD $FLAGS
