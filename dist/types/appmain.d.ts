import { LitElement, type CSSResultGroup, type TemplateResult, type PropertyValues } from "lit";
import { SWManager } from "./swmanager";
import "./item";
import "./item-index";
import "./chooser";
import { type LoadInfo } from "./item";
import type { FavIconEventDetail } from "./types";
export declare class ReplayWebApp extends LitElement {
    inited: boolean;
    pageParams: URLSearchParams;
    sourceUrl: string | null;
    navMenuShown: boolean;
    showAbout: boolean;
    showFileDropOverlay: boolean;
    collTitle: string | null;
    loadInfo: LoadInfo | null;
    embed: string | null;
    collPageUrl: string;
    pageTitle: string;
    pageReplay: boolean;
    source: string | null;
    skipRuffle: boolean;
    swErrorMsg: TemplateResult<1> | string | null;
    protected swName?: string;
    protected swmanager: SWManager | null;
    private useRuffle;
    private droppedFile;
    constructor(swName?: string);
    private readonly maybeStartFileDrop;
    get appName(): string;
    get homeUrl(): string;
    static get styles(): CSSResultGroup;
    static get appStyles(): CSSResultGroup;
    get mainLogo(): string;
    renderNavBrand(): TemplateResult<1>;
    renderNavBar(): TemplateResult<1>;
    renderNavEnd(): TemplateResult<1>;
    renderColl(): TemplateResult<1>;
    renderHomeIndex(): TemplateResult<1>;
    render(): string | TemplateResult<1>;
    firstUpdated(): void;
    updated(changedProperties: PropertyValues<this>): void;
    onFavIcons(event: CustomEvent<FavIconEventDetail>): void;
    skipMenu(event: any): void;
    onNavMenu(event: any): void;
    initRoute(): void;
    onStartLoad(event: any): void;
    onCollLoaded(event: any): void;
    onTitle(event: any): void;
    safariKeyframes(): void;
    renderAbout(): TemplateResult<1>;
    onAboutClose(): void;
    renderDropFileOverlay(): TemplateResult<1>;
}
//# sourceMappingURL=appmain.d.ts.map